syntax = "proto3";
package hirokryptor.xyzchain.xyzchain;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "xyzchain/pool.proto";

option go_package = "github.com/hirokryptor/xyzchain/x/xyzchain/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2
	rpc Pool(QueryGetPoolRequest) returns (QueryGetPoolResponse) {
		option (google.api.http).get = "/hirokryptor/xyzchain/xyzchain/pool/{id}";
	}
	rpc PoolAll(QueryAllPoolRequest) returns (QueryAllPoolResponse) {
		option (google.api.http).get = "/hirokryptor/xyzchain/xyzchain/pool";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetPoolRequest {
	string id = 1;
}

message QueryGetPoolResponse {
	Pool Pool = 1;
}

message QueryAllPoolRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPoolResponse {
	repeated Pool Pool = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
